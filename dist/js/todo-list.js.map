{"version":3,"sources":["todo-list.js"],"names":["Todolist","selector","evt","preventDefault","console","log","text","newItemInput","value","item","TodoItem","items","push","updateList","updateCompletedCount","save","count","filter","completed","length","completedCountEl","innerText","totalCountEl","forEach","li","document","createElement","appendChild","element","todolist","classList","add","remove","load","todolistWrapper","querySelector","todoForm","hideButton","setup","addEventListener","handleNewItem","handleItemToggled","hideItem","localStorage","setItem","JSON","stringify","someTodos","getItem","existingItems","parse","map","todoItem"],"mappings":"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","sourcesContent":["class Todolist {\r\n    constructor(selector){\r\n        this.items = []\r\n        this.load()\r\n\r\n        this.todolistWrapper = document.querySelector(selector)\r\n        this.todoForm = this.todolistWrapper.querySelector(\"form\")\r\n        this.todolist = this.todolistWrapper.querySelector(\"#list\")\r\n        this.newItemInput = this.todolistWrapper.querySelector(\"[name='new-item']\")\r\n\r\n        this.totalCountEl = this.todolistWrapper.querySelector(\".total\")\r\n        this.completedCountEl = this.todolistWrapper.querySelector(\".done\")\r\n\r\n        this.hideButton = this.todolistWrapper.querySelector(\"[name='hide-button']\")\r\n\r\n        this.setup()\r\n        this.updateList()\r\n    }\r\n\r\n    setup(){\r\n        this.todoForm.addEventListener(\"submit\" , this.handleNewItem)\r\n        document.addEventListener(\"item-toggled\" , this.handleItemToggled)\r\n        this.hideButton.addEventListener('click' , this.hideItem)\r\n    }\r\n\r\n    handleNewItem = (evt) => {\r\n        evt.preventDefault()\r\n        console.log('hello')\r\n        const text = this.newItemInput.value\r\n        const item = new TodoItem(text)\r\n        this.items.push(item)\r\n        this.newItemInput.value = \"\"\r\n\r\n        console.log('items' , this.items)\r\n        this.updateList()\r\n    }\r\n\r\n    handleItemToggled = (evt) => {\r\n        console.log(\"an item was toggled\" , evt)\r\n        this.updateCompletedCount()\r\n        this.save()\r\n    }\r\n\r\n    updateCompletedCount = () => {\r\n        const count = this.items.filter((item) => item.completed === true).length \r\n        this.completedCountEl.innerText = count\r\n    }\r\n\r\n    updateList = () => {\r\n        this.totalCountEl.innerText = this.items.length\r\n        this.items.forEach((item) => {\r\n            const li = document.createElement('li')\r\n            li.appendChild(item.element)\r\n            this.todolist.appendChild(li)\r\n            console.log(item.element)\r\n        })\r\n    }\r\n\r\n    hideItem = () => {\r\n        this.items.forEach((item) => {\r\n            if(item.completed === true){\r\n                item.element.classList.add(\"hide\")\r\n            }  else if (item.completed === false){\r\n                item.element.classList.remove(\"hide\")\r\n            }\r\n        }) \r\n    }\r\n\r\n    save() {\r\n        localStorage.setItem('todos' , JSON.stringify(this.items))\r\n    }\r\n\r\n    load() {\r\n        const someTodos = localStorage.getItem(\"todos\")\r\n        if(someTodos) {\r\n            const existingItems = JSON.parse(someTodos)\r\n            this.items = existingItems.map((item) => {\r\n                const todoItem = new TodoItem(item.text, { completed: item.completed})\r\n                return todoItem\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// full list \r\n// another checkbox to hiude comppleted \r\n// when it goes to update the list wether or not to show an item\r\n// inside of update list \"hide items\" do in css or whatever \r\n// remove items with either a button or seperate actions\r\n\r\n// update list via css or update list viadom functions \r\n// custom events \r\n\r\n// create a button for removeing completed items from the list\r\n// button for removing individual items \r\n//"],"file":"todo-list.js"}